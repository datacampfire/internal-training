[
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": true,
                "l": "true"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Name of Member \nParty \nConstituency(State)",
          "omitBlank": false,
          "type": "list",
          "columnName": "Name of Member \nParty \nConstituency(State)"
        }
      ]
    }
  },
  {
    "op": "core/column-addition-by-fetching-urls",
    "description": "Create column json at index 5 by fetching URLs based on column Delhi Address using expression grel:\"http://maps.google.com/maps/api/geocode/json?sensor=false&address=\" + escape(value, \"url\")",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Name of Member \nParty \nConstituency(State)",
          "omitBlank": false,
          "type": "list",
          "columnName": "Name of Member \nParty \nConstituency(State)"
        }
      ]
    },
    "newColumnName": "json",
    "columnInsertIndex": 5,
    "baseColumnName": "Delhi Address",
    "urlExpression": "grel:\"http://maps.google.com/maps/api/geocode/json?sensor=false&address=\" + escape(value, \"url\")",
    "onError": "set-to-blank",
    "delay": 5000,
    "cacheResponses": true
  },
  {
    "op": "core/column-addition",
    "description": "Create column lat/lon at index 6 based on column json using expression grel:with(value.parseJson().results[0].geometry.location, pair, pair.lat +\", \" + pair.lng)",
    "engineConfig": {
      "mode": "row-based",
      "facets": [
        {
          "omitError": false,
          "expression": "isBlank(value)",
          "selectBlank": false,
          "selection": [
            {
              "v": {
                "v": false,
                "l": "false"
              }
            }
          ],
          "selectError": false,
          "invert": false,
          "name": "Name of Member \nParty \nConstituency(State)",
          "omitBlank": false,
          "type": "list",
          "columnName": "Name of Member \nParty \nConstituency(State)"
        }
      ]
    },
    "newColumnName": "lat/lon",
    "columnInsertIndex": 6,
    "baseColumnName": "json",
    "expression": "grel:with(value.parseJson().results[0].geometry.location, pair, pair.lat +\", \" + pair.lng)",
    "onError": "set-to-blank"
  }
]
